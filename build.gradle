buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
		maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

sourceCompatibility = targetCompatibility = 1.8

version = "3.0.0.1"
group= "heckerpowered.ultimate" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ultimate"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.${archivesBaseName}.refmap.json"
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"
afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

reobf {
    addExtraSrgFile mixinSrg
}

repositories {
    jcenter()
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public'
    }
}

configurations {
	shade
	compile.extendsFrom shade
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    shade 'org.spongepowered:mixin:0.7+'
}

jar {
    from sourceSets.main.output

    from { (configurations.shade).collect { it.isDirectory() ? it : zipTree(it) }
     } { exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA' }

    from refMap
    manifest.attributes(
            'FMLCorePlugin': 'heckerpowered.ultimate.common.core.UltimateCore',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "mixins.ultimate.json",
            'FMLCorePluginContainsFMLMod': 'true',
            "MixinCompatibilityLevel": "JAVA_8"
    )
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}